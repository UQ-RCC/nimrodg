apply plugin: 'application'
apply plugin: 'distribution'

mainClassName = 'au.edu.uq.rcc.nimrodg.portal.PortalServerApplication'

dependencies {
    implementation group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: '2.12.1'

    /* Spring dependencies */
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat', version: '2.2.1.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.2.1.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.2.1.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '2.2.1.RELEASE'

    implementation(group: 'org.springframework.security', name: 'spring-security-core', version: '5.2.1.RELEASE');
    implementation(group: 'org.springframework.security', name: 'spring-security-oauth2-jose', version: '5.2.1.RELEASE');
    implementation(group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: '5.2.1.RELEASE');

    /* Bouncycastle */
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.64'
    implementation group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.64'

    testImplementation 'junit:junit:4.12'

    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.8'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '+'
    implementation group: 'com.hubspot.jinjava', name: 'jinjava', version: '2.5.1'

    implementation project(':nimrodg-api')
    // FIXME: This capability should be moved into nimrodg-api
    implementation project(':nimrodg-internal-api')
    implementation project(':nimrodg-impl-base-db')
    implementation project(':nimrodg-impl-postgres')
    implementation project(':nimrodg-parsing')
    implementation project(':nimrodg-resources')
    implementation project(':nimrodg-utils')

    // FIXME: For Nimrod
    runtimeOnly group: 'org.glassfish', name: 'javax.json', version: '1.1'
}

distributions {
    main {
        distZip.enabled false
        contents {
            eachFile {
                if (it.relativePath.segments[-2] == 'lib') {
                    it.mode = 0644
                } else if (it.relativePath.segments[-2] == 'bin') {
                    it.mode = 0755
                }
            }

            into("etc/${project.name}") {
                from('application.sample.yml')
                rename('application.sample.yml', 'application.yml')
                fileMode 0644
            }

            into("etc/${project.name}") {
                from('logback-spring.xml')
                fileMode 0644
            }

            into("etc/${project.name}") {
                from("src/main/resources/au/edu/uq/rcc/nimrodg/portal/schema.sql")
                fileMode 0644
            }
        }
    }

    deb {
        debDistZip.enabled false
        debDistTar.enabled false
        contents {
            into("usr/share/${project.name}") {
                with distributions.main.contents
            }

            into("etc/${project.name}") {
                from('application.sample.yml')
                rename('application.sample.yml', 'application.yml')
                fileMode 0644
            }

            into("etc/${project.name}") {
                from('logback-spring.xml')
                fileMode 0644
            }
        }
    }
}

distTar {
    compression Compression.GZIP
    extension 'tar.gz' /* Not .tgz */
}

installDebDist {
    destinationDir = new File("debian/${project.name}")
}
