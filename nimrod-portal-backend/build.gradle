plugins {
    id 'de.undercouch.download' version '4.1.1'
    id 'nebula.ospackage' version '8.5.6'
}

apply plugin: 'application'
apply plugin: 'distribution'

mainClassName = 'au.edu.uq.rcc.nimrodg.portal.PortalServerApplication'

ext {
    SPRING_BOOT_VERSION     = '2.4.3'
    SPRING_SECURITY_VERSION = '5.4.5'
}

dependencies {
    implementation group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: LOG4J_VERSION

    implementation group: 'net.sourceforge.argparse4j', name: 'argparse4j', version: '0.7.0'

    /* Spring dependencies */
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat', version: SPRING_BOOT_VERSION
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: SPRING_BOOT_VERSION
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: SPRING_BOOT_VERSION
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: SPRING_BOOT_VERSION
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: SPRING_BOOT_VERSION

    implementation(group: 'org.springframework.security', name: 'spring-security-core', version: SPRING_SECURITY_VERSION);
    implementation(group: 'org.springframework.security', name: 'spring-security-oauth2-jose', version: SPRING_SECURITY_VERSION);
    implementation(group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: SPRING_SECURITY_VERSION);

    /* Bouncycastle */
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.64'
    implementation group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.64'

    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.8'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '+'
    implementation group: 'com.hubspot.jinjava', name: 'jinjava', version: '2.5.1'

    implementation project(':nimrodg-api')
    // FIXME: This capability should be moved into nimrodg-api
    implementation project(':nimrodg-internal-api')
    implementation project(':nimrodg-impl-base-db')
    implementation project(':nimrodg-impl-postgres')
    implementation project(':nimrodg-parsing')
    implementation project(':nimrodg-resources')
    implementation project(':nimrodg-utils')

    // FIXME: For Nimrod
    runtimeOnly group: 'org.glassfish', name: 'javax.json', version: JAVAX_JSON_VERSION

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: SPRING_BOOT_VERSION
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: SPRING_SECURITY_VERSION
}

test {
    useJUnitPlatform()
}

distributions {
    main {
        distZip.enabled false
        contents {
            eachFile {
                if (it.relativePath.segments[-2] == 'lib') {
                    it.mode = 0644
                } else if (it.relativePath.segments[-2] == 'bin') {
                    it.mode = 0755
                }
            }

            into("etc/${project.name}") {
                from('application.sample.yml')
                rename('application.sample.yml', 'application.yml')
                fileMode 0644
            }

            into("etc/${project.name}") {
                from('logback-spring.xml')
                fileMode 0644
            }

            into("etc/${project.name}") {
                from("src/main/resources/au/edu/uq/rcc/nimrodg/portal/schema.sql")
                fileMode 0644
            }
        }
    }
}

distTar {
    compression Compression.GZIP
    extension 'tar.gz' /* Not .tgz */
}

import org.redline_rpm.header.Flags

ospackage {
    packageName         'nimrod-portal-backend'
    summary             'Nimrod Portal Backend Server'
    packageDescription  'Handles Nimrod-specific functionality'

    url                 'https://rcc.uq.edu.au/nimrod'
    version             project.version
    maintainer          'Research Computing Centre <rcc-admin@uq.edu.au>'
    packager            maintainer

    user                'root'
    permissionGroup     'root'

    /* These have already been processed by debhelper. */
    postInstallFile     file('debian/postinst')
    preUninstallFile    file('debian/prerm')
    postUninstallFile   file('debian/postrm')

    into("usr/share/${project.name}") {
        with distributions.main.contents
    }

    into("etc/${project.name}") {
        from('application.sample.yml')
        rename('application.sample.yml', 'application.yml')
        fileMode 0644
        //fileType CONFIG | NOREPLACE
    }

    into("etc/${project.name}") {
        from('logback-spring.xml')
        fileMode 0644
        //fileType CONFIG | NOREPLACE
    }

    into("/lib/systemd/system") {
        from("debian/${project.name}.service")
        fileMode 0644
    }

    /* Work around https://github.com/nebula-plugins/gradle-ospackage-plugin/issues/118 */
    configurationFile("/etc/${project.name}/application.yml")
    configurationFile("/etc/${project.name}/logback-spring.xml")

    exclude 'nimrod-portal-backend.bat'
}

buildDeb {
    arch                'all'
    requires            'default-jre-headless', '1.11', Flags.GREATER | Flags.EQUAL
    requires            'adduser'
}

task(generateArtifacts, dependsOn:[assembleDist, buildDeb]) {
}
